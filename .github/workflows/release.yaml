name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Verify directory structure
        run: |
          echo "Current directory:"
          pwd
          echo "Directory contents:"
          ls -la
          echo "cmd directory contents:"
          ls -la cmd/

      - name: Build binaries
        run: |
          # Linux AMD64
          GOOS=linux GOARCH=amd64 go build -ldflags="-s -w -X main.version=${{ steps.get_version.outputs.VERSION }}" -o kc-linux-amd64 ./cmd/kc

          # Linux ARM64
          GOOS=linux GOARCH=arm64 go build -ldflags="-s -w -X main.version=${{ steps.get_version.outputs.VERSION }}" -o kc-linux-arm64 ./cmd/kc

          # macOS AMD64
          GOOS=darwin GOARCH=amd64 go build -ldflags="-s -w -X main.version=${{ steps.get_version.outputs.VERSION }}" -o kc-darwin-amd64 ./cmd/kc

          # macOS ARM64 (Apple Silicon)
          GOOS=darwin GOARCH=arm64 go build -ldflags="-s -w -X main.version=${{ steps.get_version.outputs.VERSION }}" -o kc-darwin-arm64 ./cmd/kc

      - name: Create checksums
        run: |
          sha256sum kc-* > checksums.txt
          cat checksums.txt

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ steps.get_version.outputs.VERSION }}
          body: |
            ## Changes in this Release

            See [CHANGELOG.md](CHANGELOG.md) for details.

            ## Installation

            Download the appropriate binary for your platform below.

            ### Linux (AMD64)
            ```bash
            curl -LO https://github.com/${{ github.repository }}/releases/download/${{ steps.get_version.outputs.VERSION }}/kc-linux-amd64
            chmod +x kc-linux-amd64
            sudo mv kc-linux-amd64 /usr/local/bin/kc
            ```

            ### Linux (ARM64)
            ```bash
            curl -LO https://github.com/${{ github.repository }}/releases/download/${{ steps.get_version.outputs.VERSION }}/kc-linux-arm64
            chmod +x kc-linux-arm64
            sudo mv kc-linux-arm64 /usr/local/bin/kc
            ```

            ### macOS (Intel)
            ```bash
            curl -LO https://github.com/${{ github.repository }}/releases/download/${{ steps.get_version.outputs.VERSION }}/kc-darwin-amd64
            chmod +x kc-darwin-amd64
            sudo mv kc-darwin-amd64 /usr/local/bin/kc
            ```

            ### macOS (Apple Silicon)
            ```bash
            curl -LO https://github.com/${{ github.repository }}/releases/download/${{ steps.get_version.outputs.VERSION }}/kc-darwin-arm64
            chmod +x kc-darwin-arm64
            sudo mv kc-darwin-arm64 /usr/local/bin/kc
            ```

          files: |
            kc-linux-amd64
            kc-linux-arm64
            kc-darwin-amd64
            kc-darwin-arm64
            checksums.txt
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
